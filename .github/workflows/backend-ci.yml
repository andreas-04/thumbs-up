name: Backend CI/CD

on:
  push:
    branches: [ main, develop, distribution ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        if [ -f scripts/dependencies.txt ]; then pip install -r scripts/dependencies.txt; fi
        pip install pytest pytest-cov cryptography
    
    - name: Lint with flake8
      working-directory: ./backend
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
    
    - name: Test certificate generation
      working-directory: ./backend/pki
      run: |
        python gen_selfsigned.py --server-cn test-server --client-cn test-client --output-dir /tmp/certs
        ls -la /tmp/certs/*.pem
    
    # Uncomment when you add unit tests
    # - name: Run tests with pytest
    #   working-directory: ./backend
    #   run: |
    #     pytest api/server --cov=api/server --cov-report=xml
    
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v4
    #   with:
    #     files: ./backend/coverage.xml

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
    
    - name: Generate PKI certificates for Docker build
      run: |
        cd backend/pki
        pip install cryptography
        python gen_selfsigned.py \
          --server-cn localhost \
          --client-cn docker-client \
          --validity-days 365 \
          --output-dir .
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Server Docker Image
      working-directory: ./backend
      run: |
        docker build -f api/server/Dockerfile -t thumbsup-server:${{ github.sha }} .
    
    - name: Build Client Docker Image
      working-directory: ./backend
      run: |
        docker build -f api/client/Dockerfile -t thumbsup-client:${{ github.sha }} .
    
    - name: Test Docker Compose
      working-directory: ./backend/api
      run: |
        docker-compose config
    
    # Uncomment to push to Docker Hub or GitHub Container Registry
    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    
    # - name: Push images
    #   run: |
    #     docker push thumbsup-server:${{ github.sha }}
    #     docker push thumbsup-client:${{ github.sha }}
